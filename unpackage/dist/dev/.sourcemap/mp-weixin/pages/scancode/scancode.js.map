{"version":3,"sources":["uni-app:///main.js","webpack:///E:/工作区/hd-resource/hduser-applet/pages/scancode/scancode.vue?676e","webpack:///E:/工作区/hd-resource/hduser-applet/pages/scancode/scancode.vue?db61","webpack:///E:/工作区/hd-resource/hduser-applet/pages/scancode/scancode.vue?c3b3","webpack:///E:/工作区/hd-resource/hduser-applet/pages/scancode/scancode.vue?e8c5","uni-app:///pages/scancode/scancode.vue","webpack:///E:/工作区/hd-resource/hduser-applet/pages/scancode/scancode.vue?5b72","webpack:///E:/工作区/hd-resource/hduser-applet/pages/scancode/scancode.vue?6269"],"names":["wx","__webpack_require_UNI_MP_PLUGIN__","__webpack_require__","createPage","Page"],"mappings":";;;;;;;;;;kDAAA;;;AAGA;AACA,sG,8FAHA;AACAA,EAAE,CAACC,iCAAH,GAAuCC,mBAAvC,CAGAC,UAAU,CAACC,iBAAD,CAAV,C;;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqH;AACrH;AAC4D;AACL;AACa;;;AAGpE;AACoM;AACpM,gBAAgB,6MAAU;AAC1B,EAAE,8EAAM;AACR,EAAE,mFAAM;AACR,EAAE,4FAAe;AACjB;AACA;AACA;AACA;AACA;AACA,EAAE,uFAAU;AACZ;AACA;;AAEA;AACe,gF;;;;;;;;;;;;ACvBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAA6vB,CAAgB,kxBAAG,EAAC,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACoBjxB,+D;;;;;;;;;;;;;;;;AAHA,mBAEA,6D,eAEA,EACA,IADA,kBACA,CACA,SACA,QACA,EACA,SADA,EAEA,WAFA,EADA,EAKA,EACA,SADA,EAEA,WAFA,EAGA,eAHA,EALA,EAUA,EACA,SADA,EAEA,WAFA,EAVA;;AAcA;AACA,iBADA;AAEA,mBAFA,EAdA;;AAkBA;AACA,iBADA;AAEA,mBAFA,EAlBA;;AAsBA;AACA,iBADA;AAEA,mBAFA,EAtBA,CADA;;;;AA6BA,iBA7BA;AA8BA,kBA9BA;AA+BA,qBA/BA;AAgCA,oBAhCA;AAiCA,mBAjCA;AAkCA,+BAlCA;AAmCA,2BAnCA;AAoCA,qBApCA;AAqCA,oBArCA;AAsCA,qBAtCA;;AAwCA;AACA;;OA3CA;AA8CA;AACA;AACA,+DAFA,CAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBADA;AAEA,sBAFA;;AAIA;;AAEA;AACA;AACA;AACA;AACA,iCADA;AAEA;AACA;AACA;AACA;AACA,mDAJA,CAIA;AACA,aAPA;;AASA;AACA;AACA,0BADA;AAEA,cAFA,CAEA;AACA;AACA,oCAFA,CAEA;;AAEA,4CAJA,CAIA;AACA,WAPA;AAQA,SAnBA,MAmBA;AACA;AACA;AACA,OAxBA;;AA0BA,GA/FA;AAgGA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCADA;AAEA;AACA;AACA,aAJA;;AAMA,SARA,MAQA;AACA;AACA;AACA;AACA,OAjBA;;AAmBA,GA1HA;AA2HA;;;AAGA,8BA9HA;AA+HA;;;AAGA,8BAlIA;AAmIA;;;AAGA,kCAtIA;AAuIA;;;AAGA,oDA1IA;AA2IA;;;AAGA,4CA9IA;AA+IA;;;AAGA,oDAlJA;AAmJA;AACA,eADA,uBACA,CADA,EACA;AACA;AACA,mCADA;AAEA;AACA,KALA;;AAOA;AACA;AACA;AACA,8DADA;AAEA;AACA,4BADA,EAFA;;AAKA;AACA,6DADA,CACA;AADA,SALA;AAQA,sBARA;AASA;AACA;AACA;;AAEA;AACA;AACA,yBADA;AAEA,8BAFA;AAGA,+BAHA;AAIA;AACA;AACA;AACA;AACA,eARA;;AAUA,WAXA,MAWA;AACA;AACA,+BADA;AAEA,sCAFA;;AAIA;AACA;AACA;AACA,+BADA;AAEA;AACA;AACA;AACA;AACA;AACA,+BADA;;AAGA;;AAEA;AACA,yCADA;AAEA;AACA,oDADA,CACA;AACA;;AAEA,sDAJA,CAIA;;AAEA;;AAEA;AACA,8DADA,CACA;;AAEA,gEAHA,CAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,8DADA,CACA;AADA,2BAFA,CAIA;AACA;AACA,qBAvBA,CAuBA;;AAEA,2CAzBA,CAyBA;AACA,mBA5BA;;AA8BA,eAzCA;AA0CA;AACA;AACA;;AAEA;AACA;AACA,2CADA;AAEA;AACA;AACA,qBAJA;;AAMA,iBAPA,MAOA;AACA;AACA,+BADA;AAEA,6CAFA;AAGA,qCAHA;AAIA;AACA;AACA;AACA,iDADA;;AAGA;AACA,qBAVA;;AAYA;AACA,eAnEA;;AAqEA;AACA,SArGA;AAsGA;AACA;AACA;AACA,wBADA;AAEA,gCA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ADA,CACA;AADA,aANA;AASA,0BATA;AAUA;AACA;AACA,aAZA;AAaA;AACA;AACA,4BADA;AAEA,oCAFA;;AAIA,aAlBA;;AAoBA,SAxBA;AAyBA;AACA;AACA,iCADA;AAEA;AACA;AACA,uCADA;AAEA,8CAFA;AAGA,2CAHA;;AAKA,aARA;;AAUA,SApCA;;AAsCA,KAlfA;;AAofA,WApfA,mBAofA,KApfA,EAofA;AACA,sBADA,CACA;;AAEA;AACA,kCADA;AAEA;AACA,gCAHA;AAIA,gCAJA;AAKA,uBALA;AAMA,8BANA;AAOA;AACA;AACA;AACA;AACA,yBADA;AAEA,2BAFA;AAGA,0BAHA;;AAKA,SAfA;AAgBA,qCAhBA;AAiBA,wCAjBA;;AAmBA,KA1gBA;;AA4gBA;AACA;AACA,yCADA;AAEA;AACA;AACA,iCADA;;AAGA;AACA,mCADA;;AAGA,SATA;;AAWA,KAxhBA;;AA0hBA,YA1hBA,sBA0hBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wDAdA,CAcA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,mDAFA,CAEA;;AAEA,kFAJA,CAIA;AACA;;AAEA;AACA;AACA,yEADA,CACA;AACA;;AAEA,wEAJA,CAIA;;AAEA,mDANA,CAMA;AACA,aAPA,MAOA;AACA;AACA;AACA,WAlBA,CAkBA;;AAEA;AACA;AACA,kCADA,CACA;;AAEA,yDAHA,CAGA;AACA,aAJA,EAIA,WAJA;AAKA,WANA;AAOA;;AAEA;AACA;AACA;AACA,oCADA;;AAGA,SAlCA,MAkCA;AACA;;AAEA;AACA,oDAJA,CAIA;AACA;;AAEA;AACA,iFADA,CACA;AACA;;AAEA,wCAXA,CAWA;AACA;;AAEA,mEAdA,CAcA;;AAEA;AACA;AACA,mDADA,CACA;;AAEA,sDAHA,CAGA;;AAEA,sCALA,CAKA;AACA,aANA,MAMA;AACA;AACA,4CAFA,CAEA;AACA;AACA,WA3BA,CA2BA;;AAEA;AACA;AACA,kCADA,CACA;;AAEA,yDAHA,CAGA;AACA,aAJA,EAIA,WAJA;AAKA,WANA;AAOA;;AAEA;AACA;AACA;AACA,oCADA;;AAGA;AACA,OAhFA,MAgFA;AACA;AACA;AACA,+CAHA,CAGA;;AAEA;;AAEA;AACA;AACA;AACA,kCADA;;AAGA;AACA,KA1oBA;;AA4oBA;AACA;AACA;AACA,KA/oBA;;AAipBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAtrBA,EAnJA,E;;;;;;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AAA6kC,CAAgB,ukCAAG,EAAC,C;;;;;;;;;;;ACAjmC;AACA,OAAO,KAAU,EAAE,kBAKd","file":"pages/scancode/scancode.js","sourcesContent":["import 'uni-pages';\n// @ts-ignore\nwx.__webpack_require_UNI_MP_PLUGIN__ = __webpack_require__;\nimport Vue from 'vue'\nimport Page from './pages/scancode/scancode.vue'\ncreatePage(Page)","import { render, staticRenderFns, recyclableRender, components } from \"./scancode.vue?vue&type=template&id=39943dc6&\"\nvar renderjs\nimport script from \"./scancode.vue?vue&type=script&lang=js&\"\nexport * from \"./scancode.vue?vue&type=script&lang=js&\"\nimport style0 from \"./scancode.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!D:\\\\HBuilderX.1.9.4.20190426.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\runtime\\\\componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"pages/scancode/scancode.vue\"\nexport default component.exports","export * from \"-!D:\\\\HBuilderX.1.9.4.20190426.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\loaders\\\\templateLoader.js??vue-loader-options!D:\\\\HBuilderX.1.9.4.20190426.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--16-0!D:\\\\HBuilderX.1.9.4.20190426.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\template.js!D:\\\\HBuilderX.1.9.4.20190426.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-uni-app-loader\\\\page-meta.js!D:\\\\HBuilderX.1.9.4.20190426.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilderX.1.9.4.20190426.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./scancode.vue?vue&type=template&id=39943dc6&\"","var components\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!D:\\\\HBuilderX.1.9.4.20190426.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!D:\\\\HBuilderX.1.9.4.20190426.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--12-1!D:\\\\HBuilderX.1.9.4.20190426.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!D:\\\\HBuilderX.1.9.4.20190426.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilderX.1.9.4.20190426.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./scancode.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!D:\\\\HBuilderX.1.9.4.20190426.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!D:\\\\HBuilderX.1.9.4.20190426.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--12-1!D:\\\\HBuilderX.1.9.4.20190426.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!D:\\\\HBuilderX.1.9.4.20190426.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilderX.1.9.4.20190426.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./scancode.vue?vue&type=script&lang=js&\"","<template>\r\n    <view class=\"container\">\r\n        <text class=\"connect_device_name\">当前设备：{{ deviceName }}</text>\r\n        <radio-group class=\"radio-group\" @change=\"radioChange\">\r\n            <label class=\"radio\" v-for=\"(item, index) in items\" :key=\"index\">\r\n                <view>\r\n                    <radio :value=\"item.name\" :checked=\"item.checked\" />\r\n                    {{ item.value }}\r\n                </view>\r\n            </label>\r\n        </radio-group>\r\n        <button @tap=\"Sendincoins\" class=\"addincoins\">投币</button>\r\n        <button @tap=\"Payincoins\" class=\"payincoins\">支付</button>\r\n    </view>\r\n</template>\r\n\r\n<script>\r\nconst app = getApp();\r\n\r\nvar utils = require('../../utils/util');\r\nimport { authorization } from '@/api/home/index.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            items: [\r\n                {\r\n                    name: '1',\r\n                    value: '1元'\r\n                },\r\n                {\r\n                    name: '2',\r\n                    value: '2元',\r\n                    checked: 'true'\r\n                },\r\n                {\r\n                    name: '3',\r\n                    value: '3元'\r\n                },\r\n                {\r\n                    name: '4',\r\n                    value: '4元'\r\n                },\r\n                {\r\n                    name: '5',\r\n                    value: '5元'\r\n                },\r\n                {\r\n                    name: '6',\r\n                    value: '6元'\r\n                }\r\n            ],\r\n\r\n            subcode: '',\r\n            deviceId: '',\r\n            money_value: '',\r\n            deviceName: '',\r\n            serviceId: '',\r\n            notycharacteristicsId: '',\r\n            characteristicsId: '',\r\n            recv_number: '',\r\n            recv_value: '',\r\n            send_number: ''\r\n        };\r\n    }\r\n    /**\r\n     * 生命周期函数--监听页面加载\r\n     */,\r\n    onLoad: function (options) {\r\n        var that = this;\r\n        console.log('index 生命周期 onload' + JSON.stringify(options)); //在此函数中获取扫描普通链接二维码参数\r\n\r\n        let q = decodeURIComponent(options.q);\r\n\r\n        if (q) {\r\n            console.log('index 生命周期 onload url=' + q);\r\n            console.log('index 生命周期 onload 参数 flag=' + utils.getQueryString(q, 'flag'));\r\n        }\r\n\r\n        var checkQrcode = q.indexOf('https://www.tengfuchong.cn/applet');\r\n\r\n        if (checkQrcode != -1) {\r\n            var i = q.lastIndexOf('/');\r\n            var subq = q.substr(i + 1);\r\n            console.log('index' + i + '---截取字符串===' + subq);\r\n            this.setData({\r\n                subcode: subq,\r\n                deviceId: null\r\n            });\r\n        }\r\n\r\n        uni.login({\r\n            success: function (res) {\r\n                if (res.code) {\r\n                    uni.getUserInfo({\r\n                        withCredentials: true,\r\n                        success: function (res) {\r\n                            var objz = {};\r\n                            objz.avatarUrl = res.userInfo.avatarUrl;\r\n                            objz.nickName = res.userInfo.nickName;\r\n                            uni.setStorageSync('userInfo', objz); //存储userInfo\r\n                        }\r\n                    });\r\n\t\t\t\t\t// 获取用户openid\r\n\t\t\t\t\tauthorization({\r\n\t\t\t\t\t\tcode: res.code\r\n\t\t\t\t\t}).then(res => {\r\n\t\t\t\t\t\tvar obj = {};\r\n\t\t\t\t\t\tobj.openid = res.openid; // console.log(obj);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tuni.setStorageSync('user', obj); //存储openid\r\n\t\t\t\t\t})\r\n                } else {\r\n                    // console.log('获取用户登录态失败！' + res.errMsg)\r\n                }\r\n            }\r\n        });\r\n    },\r\n    /**\r\n     * 生命周期函数--监听页面初次渲染完成\r\n     */\r\n    onReady: function () {\r\n        var that = this;\r\n        /* 初始化蓝牙适配器 */\r\n\r\n        uni.openBluetoothAdapter({\r\n            success: function (res) {\r\n                var deviceMac = that.deviceId;\r\n                console.log('deviceid===' + deviceMac);\r\n\r\n                if (deviceMac != null) {\r\n                    console.log('通过有值');\r\n                    uni.closeBLEConnection({\r\n                        deviceId: that.deviceId,\r\n                        success: function (res) {\r\n                            that.WolfConnectDevice();\r\n                        }\r\n                    });\r\n                } else {\r\n                    console.log('不通过无值');\r\n                    that.WolfConnectDevice();\r\n                }\r\n            }\r\n        });\r\n    },\r\n    /**\r\n     * 生命周期函数--监听页面显示\r\n     */\r\n    onShow: function () {},\r\n    /**\r\n     * 生命周期函数--监听页面隐藏\r\n     */\r\n    onHide: function () {},\r\n    /**\r\n     * 生命周期函数--监听页面卸载\r\n     */\r\n    onUnload: function () {},\r\n    /**\r\n     * 页面相关事件处理函数--监听用户下拉动作\r\n     */\r\n    onPullDownRefresh: function () {},\r\n    /**\r\n     * 页面上拉触底事件的处理函数\r\n     */\r\n    onReachBottom: function () {},\r\n    /**\r\n     * 用户点击右上角分享\r\n     */\r\n    onShareAppMessage: function () {},\r\n    methods: {\r\n        radioChange(e) {\r\n            this.setData({\r\n                money_value: e.detail.value\r\n            }); // console.log('radio发生change事件，携带value值为：', e.detail.value)\r\n        },\r\n\r\n        WolfConnectDevice: function () {\r\n            var that = this;\r\n            uni.request({\r\n                url: 'https://app.tengfuchong.com/applet/findDeviceId',\r\n                data: {\r\n                    code: that.subcode\r\n                },\r\n                header: {\r\n                    'content-type': 'application/x-www-form-urlencoded' // 默认值\r\n                },\r\n                method: 'POST',\r\n                success: function (res) {\r\n                    let dataval = res.data;\r\n                    console.log('查询MAC地址===' + dataval);\r\n\r\n                    if (dataval == 0) {\r\n                        uni.showModal({\r\n                            title: '提示',\r\n                            content: '设备不存在',\r\n                            showCancel: false,\r\n                            success: function (res) {\r\n                                if (res.confirm) {\r\n                                    console.log('用户点击确定');\r\n                                }\r\n                            }\r\n                        });\r\n                    } else {\r\n                        that.setData({\r\n                            deviceId: dataval,\r\n                            deviceName: that.subcode\r\n                        });\r\n                        console.log('初始化蓝牙适配器成功');\r\n                        console.log('MAC===' + dataval);\r\n                        uni.createBLEConnection({\r\n                            deviceId: dataval,\r\n                            success: function (res) {\r\n                                // console.log('连接成功', res);\r\n                                console.log('连接deviceId', dataval);\r\n                                uni.hideLoading();\r\n                                uni.showToast({\r\n                                    title: '连接成功'\r\n                                });\r\n                                /* 获取设备的服务UUID */\r\n\r\n                                uni.getBLEDeviceServices({\r\n                                    deviceId: that.deviceId,\r\n                                    success: function (service) {\r\n                                        var all_UUID = service.services; //取出所有的服务\r\n                                        // console.log('所有的服务', all_UUID);\r\n\r\n                                        var UUID_lenght = all_UUID.length; //获取到服务数组的长度\r\n\r\n                                        /* 遍历服务数组 */\r\n\r\n                                        for (var index = 0; index < UUID_lenght; index++) {\r\n                                            var ergodic_UUID = all_UUID[index].uuid; //取出服务里面的UUID\r\n\r\n                                            var UUID_slice = ergodic_UUID.slice(4, 8); //截取4到8位\r\n\r\n                                            /* 判断是否是我们需要的FEE0 */\r\n                                            // console.log('uuid长度' + UUID_slice);\r\n                                            // console.log('uuid判别' + (UUID_slice == 'FEE0' || UUID_slice == 'ffe0'));\r\n\r\n                                            if (UUID_slice == 'FFE0' || UUID_slice == 'ffe0') {\r\n                                                var index_uuid = index;\r\n                                                that.setData({\r\n                                                    serviceId: all_UUID[index_uuid].uuid //确定需要的服务UUID\r\n                                                }); // console.log('uuid' + all_UUID[index_uuid].uuid)\r\n                                            }\r\n                                        } // console.log('连接deviceId', that.data.deviceId);\r\n\r\n                                        that.Characteristics(); //调用获取特征值函数\r\n                                    }\r\n                                });\r\n                            },\r\n                            fail: function (res) {\r\n                                console.log('res===' + res.errMsg);\r\n                                uni.hideLoading();\r\n\r\n                                if (res.errMsg.indexOf('already connect') != -1) {\r\n                                    uni.closeBLEConnection({\r\n                                        deviceId: that.deviceId,\r\n                                        success: function (res) {\r\n                                            that.WolfConnectDevice();\r\n                                        }\r\n                                    });\r\n                                } else {\r\n                                    uni.showModal({\r\n                                        title: '提示',\r\n                                        content: '连接失败，请确认设备是否在线',\r\n                                        showCancel: false,\r\n                                        success: function (res) {\r\n                                            if (res.confirm) {\r\n                                                uni.switchTab({\r\n                                                    url: '../device/device'\r\n                                                });\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                },\r\n                fail: function (err) {\r\n                    console.log(err.data);\r\n                    uni.showToast({\r\n                        icon: 'none',\r\n                        title: '服务器异常，清稍候再试'\r\n                    });\r\n                },\r\n                complete: function () {\r\n                    uni.hideLoading();\r\n                }\r\n            });\r\n        },\r\n\r\n        Characteristics: function () {\r\n            var that = this; // console.log('this===' + that);\r\n\r\n            var device_characteristics = [];\r\n            var characteristics_uuid = {};\r\n            uni.getBLEDeviceCharacteristics({\r\n                deviceId: that.deviceId,\r\n                serviceId: that.serviceId,\r\n                success: function (res) {\r\n                    var characteristics = res.characteristics; //获取到所有特征值\r\n\r\n                    var characteristics_length = characteristics.length; //获取到特征值数组的长度\r\n                    // console.log('获取到特征值', characteristics);\r\n                    // console.log('获取到特征值数组长度', characteristics_length);\r\n\r\n                    /* 遍历数组获取notycharacteristicsId */\r\n\r\n                    for (var index = 0; index < characteristics_length; index++) {\r\n                        var noty_characteristics_UUID = characteristics[index].uuid; //取出特征值里面的UUID\r\n\r\n                        var characteristics_slice = noty_characteristics_UUID.slice(4, 8); //截取4到8位\r\n\r\n                        /* 判断是否是我们需要的FEE1 */\r\n\r\n                        if (characteristics_slice == 'FFE1' || characteristics_slice == 'ffe1') {\r\n                            var index_uuid = index;\r\n                            that.setData({\r\n                                notycharacteristicsId: characteristics[index_uuid].uuid,\r\n                                //需确定要的使能UUID\r\n                                characteristicsId: characteristics[index_uuid].uuid //暂时确定的写入UUID\r\n                            });\r\n                            /* 遍历获取characteristicsId */\r\n\r\n                            for (var index = 0; index < characteristics_length; index++) {\r\n                                var characteristics_UUID = characteristics[index].uuid; //取出特征值里面的UUID\r\n\r\n                                var characteristics_slice = characteristics_UUID.slice(4, 8); //截取4到8位\r\n\r\n                                /* 判断是否是我们需要的FEE2 */\r\n\r\n                                if (characteristics_slice == 'FEE2' || characteristics_slice == 'fee2') {\r\n                                    var index_uuid = index;\r\n                                    that.setData({\r\n                                        characteristicsId: characteristics[index_uuid].uuid //确定的写入UUID\r\n                                    });\r\n                                }\r\n                            }\r\n                        }\r\n                    } // console.log('使能characteristicsId', that.data.notycharacteristicsId);\r\n\r\n                    // console.log('写入characteristicsId', that.data.characteristicsId);\r\n\r\n                    that.notycharacteristicsIdFun(); //使能事件\r\n                }\r\n            });\r\n        },\r\n\r\n        /* 使能函数 */\r\n        notycharacteristicsIdFun: function () {\r\n            var that = this;\r\n            var recv_value_ascii = '';\r\n            var string_value = '';\r\n            var recve_value = '';\r\n            uni.notifyBLECharacteristicValueChange({\r\n                deviceId: that.deviceId,\r\n                serviceId: that.serviceId,\r\n                characteristicId: that.notycharacteristicsId,\r\n                state: true,\r\n                success: function (res) {\r\n                    // console.log('使能成功', res);\r\n\r\n                    /* 设备返回值 */\r\n                    uni.onBLECharacteristicValueChange(function (res) {\r\n                        var length_hex = [];\r\n                        var turn_back = '';\r\n                        var turn_back_hex = '';\r\n                        var result = res.value;\r\n                        var hex = that.buf2hex(result); // console.log('返回的值', hex);\r\n                        // console.log('设备返回来的值', hex);\r\n\r\n                        var f_hex = hex;\r\n                        var length_soy = f_hex.length / 2;\r\n                        var length = Math.round(length_soy);\r\n\r\n                        for (var i = 0; i < length; i++) {\r\n                            var hex_spalit = f_hex.slice(0, 2);\r\n                            length_hex.push(hex_spalit);\r\n                            f_hex = f_hex.substring(2);\r\n                        } // console.log('length_hex', length_hex);\r\n\r\n                        for (var j = 0; j < length_hex.length; j++) {\r\n                            var integar = length_hex[j]; //十六进制\r\n\r\n                            recve_value = parseInt(integar, 16); //十进制\r\n                            // console.log('recve_value', recve_value);\r\n\r\n                            turn_back = turn_back + String.fromCharCode(recve_value);\r\n                            turn_back_hex = turn_back_hex + integar; // console.log('turn_back', integar);\r\n                        } // console.log('返回值hex' + turn_back_hex);\r\n\r\n                        if (turn_back_hex == '5504830100d2') {\r\n                            uni.hideLoading();\r\n                            uni.showToast({\r\n                                title: '投币成功'\r\n                            });\r\n                        } // console.log('最终转回来的值', turn_back);\r\n\r\n                        var recv_number_1 = that.recv_number + turn_back.length;\r\n                        var recv_number = Math.round(recv_number_1);\r\n                        that.setData({\r\n                            recv_number: recv_number,\r\n                            recv_value: that.recv_value + turn_back\r\n                        });\r\n                    });\r\n                },\r\n                fail: function (res) {\r\n                    // console.log('使能失败', res);\r\n                }\r\n            });\r\n        },\r\n\r\n        Sendincoins: function () {\r\n            var that = this;\r\n            uni.openBluetoothAdapter({\r\n                success: function (res) {\r\n                    var send1 = 'aa';\r\n                    var send2 = '83';\r\n                    var send3 = '04';\r\n                    var send4 = '01';\r\n                    var send5 = '01';\r\n                    var send6 = that.money_value || '02';\r\n                    var valSize = send6.length;\r\n\r\n                    if (valSize < 2 && valSize > 0) {\r\n                        send6 = '0' + send6;\r\n                    }\r\n\r\n                    var send7 = send2 ^ send3 ^ send4 ^ send5 ^ send6; // console.log(\"拼凑值===\" + send1 + '' + send2 + '' + send3 + '' + send4 + '' + send5 + '' + send6 + '' + send7)\r\n                    // var value_initial = 'aa830401010186';\r\n\r\n                    var value_initial = send1 + '' + send2 + '' + send3 + '' + send4 + '' + send5 + '' + send6 + '' + send7;\r\n                    /* 判断字节是否超过20字节 */\r\n\r\n                    if (value_initial.length > 20) {\r\n                        //当字节超过20的时候，采用分段发送\r\n                        if (that.send_string == true) {\r\n                            //选择16进制发送时\r\n                            var value_initial_exceed = value_initial; //将输入框的值取过来，方便循环\r\n\r\n                            var value_initial_average = Math.ceil(value_initial_exceed.length / 20); //将value_initial_exceed的长度除以20，余数再向上取一，确定循环几次\r\n                            // console.log('需要循环的次数', value_initial_average);\r\n\r\n                            for (var i = 0; i < value_initial_average; i++) {\r\n                                if (value_initial_exceed.length > 20) {\r\n                                    var value_initial_send = value_initial_exceed.slice(0, 20); //截取前20个字节\r\n                                    // console.log('截取到的值', value_initial_send);\r\n\r\n                                    value_initial_exceed = value_initial_exceed.substring(20); //value_initial_exceed替换为取掉前20字节后的数据\r\n\r\n                                    write_array.push(value_initial_send); //将所有截取的值放在一个数组\r\n                                } else {\r\n                                    write_array.push(value_initial_exceed);\r\n                                }\r\n                            } // console.log('write_array数组', write_array);\r\n\r\n                            write_array.map(function (val, index) {\r\n                                setTimeout(function () {\r\n                                    var value_set = val; // console.log('value_set', value_set);\r\n\r\n                                    var write_function = that.write(value_set); //调用数据发送函数\r\n                                }, index * 100);\r\n                            });\r\n                            /* 发送的值的字节 */\r\n\r\n                            var send_number_1 = that.send_number + value_initial.length / 2;\r\n                            var send_number = Math.floor(send_number_1);\r\n                            that.setData({\r\n                                send_number: send_number\r\n                            });\r\n                        } else {\r\n                            //选择Ascii码发送\r\n\r\n                            /* 当选择以Ascii字符发送的时候 */\r\n                            var value_split = value_initial.split(''); //将字符一个一个分开\r\n                            // console.log('value_split', value_split);\r\n\r\n                            for (var i = 0; i < value_split.length; i++) {\r\n                                value_ascii = value_ascii + value_split[i].charCodeAt().toString(16); //转为Ascii字符后连接起\r\n                            }\r\n\r\n                            var Ascii_value = value_ascii; // console.log('转为Ascii码值', Ascii_value);\r\n                            // console.log('Ascii_value的长度', Ascii_value.length)\r\n\r\n                            var Ascii_send_time = Math.ceil(Ascii_value.length / 20); // console.log('Ascii发送的次数', Ascii_send_time);\r\n\r\n                            for (var i = 0; i < Ascii_send_time; i++) {\r\n                                if (Ascii_value.length > 20) {\r\n                                    var value = Ascii_value.slice(0, 20); // console.log('截取到的值', value);\r\n\r\n                                    Ascii_value = Ascii_value.substring(20); // console.log('此时剩下的Ascii_value', Ascii_value);\r\n\r\n                                    write_array.push(value); //放在数组里面\r\n                                } else {\r\n                                    var value = Ascii_value;\r\n                                    write_array.push(Ascii_value); //放在数组里面\r\n                                }\r\n                            } // console.log('数组write_array', write_array);\r\n\r\n                            write_array.map(function (val, index) {\r\n                                setTimeout(function () {\r\n                                    var value_set = val; // console.log('value_set', value_set);\r\n\r\n                                    var write_function = that.write(value_set); //调用数据发送函数\r\n                                }, index * 100);\r\n                            });\r\n                            /* 发送的值的字节 */\r\n\r\n                            var send_number_1 = that.send_number + value_initial.length;\r\n                            var send_number = Math.round(send_number_1);\r\n                            that.setData({\r\n                                send_number: send_number\r\n                            });\r\n                        }\r\n                    } else {\r\n                        /* 当选择了以Hex十六进制发送的时候 */\r\n                        var value = value_initial;\r\n                        var write_function = that.write(value); //调用数据发送函数\r\n\r\n                        /* 成功发送的值的字节 */\r\n\r\n                        var send_number_1 = that.send_number + value_initial.length / 2;\r\n                        var send_number = Math.floor(send_number_1);\r\n                        that.setData({\r\n                            send_number: send_number\r\n                        });\r\n                    }\r\n                },\r\n                fail: function (res) {\r\n                    uni.showModal({\r\n                        content: '请开启手机蓝牙后再试',\r\n                        success: function () {\r\n                            uni.switchTab({\r\n                                url: '../device/device',\r\n                                success: function () {\r\n                                    // console.log(\"success\");\r\n                                },\r\n                                fail: function (res) {\r\n                                    // console.log(\"fail\" + res);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        },\r\n\r\n        write: function (str) {\r\n            var that = this;\r\n            var value = str; // console.log('value', value);\r\n\r\n            var valSize = value.length;\r\n\r\n            if (valSize < 2 && valSize > 0) {\r\n                value = '0' + value;\r\n            }\r\n            /* 将数值转为ArrayBuffer类型数据 */\r\n\r\n            var typedArray = new Uint8Array(\r\n                (value + '\\r\\n').match(/[\\da-f]{2}/gi).map(function (h) {\r\n                    return parseInt(h, 16);\r\n                })\r\n            );\r\n            var buffer = typedArray.buffer;\r\n            uni.writeBLECharacteristicValue({\r\n                deviceId: that.deviceId,\r\n                serviceId: that.serviceId,\r\n                characteristicId: that.characteristicsId,\r\n                value: buffer,\r\n                success: function (res) {\r\n                    console.log('数据发送成功', res);\r\n                },\r\n                fail: function (res) {\r\n                    // console.log('调用失败', res);\r\n\r\n                    /* 调用失败时，再次调用 */\r\n                    uni.writeBLECharacteristicValue({\r\n                        deviceId: that.deviceId,\r\n                        serviceId: that.serviceId,\r\n                        characteristicId: that.characteristicsId,\r\n                        value: buffer,\r\n                        success: function (res) {\r\n                            // console.log('第2次数据发送成功', res);\r\n                        },\r\n                        fail: function (res) {\r\n                            console.log('第2次调用失败', res);\r\n                            /* 调用失败时，再次调用 */\r\n\r\n                            uni.writeBLECharacteristicValue({\r\n                                deviceId: that.deviceId,\r\n                                serviceId: that.serviceId,\r\n                                characteristicId: that.characteristicsId,\r\n                                value: buffer,\r\n                                success: function (res) {\r\n                                    // console.log('第3次数据发送成功', res);\r\n                                },\r\n                                fail: function (res) {\r\n                                    // wx.showToast({\r\n                                    //   title: '设备不在线或距离较远',\r\n                                    //   success: function() {\r\n                                    //     wx.switchTab({\r\n                                    //       url: '../device/device',\r\n                                    //     });\r\n                                    //   }\r\n                                    // })\r\n                                    uni.showModal({\r\n                                        title: '提示',\r\n                                        content: '设备不在线或距离较远',\r\n                                        showCancel: false,\r\n                                        success: function (res) {\r\n                                            if (res.confirm) {\r\n                                                uni.switchTab({\r\n                                                    url: '../device/device'\r\n                                                });\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        },\r\n\r\n        Payincoins: function () {\r\n            var that = this;\r\n            uni.openBluetoothAdapter({\r\n                success: function (res) {\r\n                    var openid = '';\r\n                    var user = uni.getStorageSync('user') || {};\r\n                    uni.request({\r\n                        url: 'https://app.tengfuchong.com/testpay/pay',\r\n                        data: {\r\n                            openId: user.openid,\r\n                            money: that.money_value || 2\r\n                        },\r\n                        header: {\r\n                            'content-type': 'application/x-www-form-urlencoded' // 默认值\r\n                        },\r\n                        method: 'POST',\r\n                        success: function (res) {\r\n                            that.doWxPay(res.data);\r\n                        },\r\n                        fail: function (err) {\r\n                            uni.showToast({\r\n                                icon: 'none',\r\n                                title: '服务器异常，清稍候再试'\r\n                            });\r\n                        }\r\n                    });\r\n                },\r\n                fail: function () {\r\n                    uni.showModal({\r\n                        content: '请开启手机蓝牙后再试',\r\n                        success: function () {\r\n                            uni.switchTab({\r\n                                url: '../device/device',\r\n                                success: function () {},\r\n                                fail: function (res) {}\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        },\r\n\r\n        doWxPay(param) {\r\n            var that = this; //小程序发起微信支付\r\n\r\n            uni.requestPayment({\r\n                timeStamp: param.timeStamp,\r\n                //记住，这边的timeStamp一定要是字符串类型的，不然会报错\r\n                nonceStr: param.nonceStr,\r\n                package: param.packagess,\r\n                signType: 'MD5',\r\n                paySign: param.paySign,\r\n                success: function (event) {\r\n                    // success\r\n                    that.senddata();\r\n                    uni.showToast({\r\n                        title: '支付成功',\r\n                        icon: 'success',\r\n                        duration: 2000\r\n                    });\r\n                },\r\n                fail: function (error) {},\r\n                complete: function () {}\r\n            });\r\n        },\r\n\r\n        checkBluetoothIfOpen: function () {\r\n            uni.openBluetoothAdapter({\r\n                success: function (res) {},\r\n                fail: function (res) {\r\n                    uni.showModal({\r\n                        content: '请开启手机蓝牙后再试'\r\n                    });\r\n                    uni.navigateTo({\r\n                        url: '../device/device'\r\n                    });\r\n                }\r\n            });\r\n        },\r\n\r\n        senddata() {\r\n            var that = this;\r\n            var send1 = 'aa';\r\n            var send2 = '83';\r\n            var send3 = '04';\r\n            var send4 = '01';\r\n            var send5 = '01';\r\n            var send6 = that.money_value || '02';\r\n            var valSize = send6.length;\r\n\r\n            if (valSize < 2 && valSize > 0) {\r\n                send6 = '0' + send6;\r\n            }\r\n\r\n            var send7 = send2 ^ send3 ^ send4 ^ send5 ^ send6; // var value_initial = 'aa830401010186';\r\n\r\n            var value_initial = send1 + '' + send2 + '' + send3 + '' + send4 + '' + send5 + '' + send6 + '' + send7;\r\n            /* 判断字节是否超过20字节 */\r\n\r\n            if (value_initial.length > 20) {\r\n                //当字节超过20的时候，采用分段发送\r\n                if (that.send_string == true) {\r\n                    //选择16进制发送时\r\n                    var value_initial_exceed = value_initial; //将输入框的值取过来，方便循环\r\n\r\n                    var value_initial_average = Math.ceil(value_initial_exceed.length / 20); //将value_initial_exceed的长度除以20，余数再向上取一，确定循环几次\r\n                    // console.log('需要循环的次数', value_initial_average);\r\n\r\n                    for (var i = 0; i < value_initial_average; i++) {\r\n                        if (value_initial_exceed.length > 20) {\r\n                            var value_initial_send = value_initial_exceed.slice(0, 20); //截取前20个字节\r\n                            // console.log('截取到的值', value_initial_send);\r\n\r\n                            value_initial_exceed = value_initial_exceed.substring(20); //value_initial_exceed替换为取掉前20字节后的数据\r\n\r\n                            write_array.push(value_initial_send); //将所有截取的值放在一个数组\r\n                        } else {\r\n                            write_array.push(value_initial_exceed);\r\n                        }\r\n                    } // console.log('write_array数组', write_array);\r\n\r\n                    write_array.map(function (val, index) {\r\n                        setTimeout(function () {\r\n                            var value_set = val; // console.log('value_set', value_set);\r\n\r\n                            var write_function = that.write(value_set); //调用数据发送函数\r\n                        }, index * 100);\r\n                    });\r\n                    /* 发送的值的字节 */\r\n\r\n                    var send_number_1 = that.send_number + value_initial.length / 2;\r\n                    var send_number = Math.floor(send_number_1);\r\n                    that.setData({\r\n                        send_number: send_number\r\n                    });\r\n                } else {\r\n                    //选择Ascii码发送\r\n\r\n                    /* 当选择以Ascii字符发送的时候 */\r\n                    var value_split = value_initial.split(''); //将字符一个一个分开\r\n                    // console.log('value_split', value_split);\r\n\r\n                    for (var i = 0; i < value_split.length; i++) {\r\n                        value_ascii = value_ascii + value_split[i].charCodeAt().toString(16); //转为Ascii字符后连接起\r\n                    }\r\n\r\n                    var Ascii_value = value_ascii; // console.log('转为Ascii码值', Ascii_value);\r\n                    // console.log('Ascii_value的长度', Ascii_value.length)\r\n\r\n                    var Ascii_send_time = Math.ceil(Ascii_value.length / 20); // console.log('Ascii发送的次数', Ascii_send_time);\r\n\r\n                    for (var i = 0; i < Ascii_send_time; i++) {\r\n                        if (Ascii_value.length > 20) {\r\n                            var value = Ascii_value.slice(0, 20); // console.log('截取到的值', value);\r\n\r\n                            Ascii_value = Ascii_value.substring(20); // console.log('此时剩下的Ascii_value', Ascii_value);\r\n\r\n                            write_array.push(value); //放在数组里面\r\n                        } else {\r\n                            var value = Ascii_value;\r\n                            write_array.push(Ascii_value); //放在数组里面\r\n                        }\r\n                    } // console.log('数组write_array', write_array);\r\n\r\n                    write_array.map(function (val, index) {\r\n                        setTimeout(function () {\r\n                            var value_set = val; // console.log('value_set', value_set);\r\n\r\n                            var write_function = that.write(value_set); //调用数据发送函数\r\n                        }, index * 100);\r\n                    });\r\n                    /* 发送的值的字节 */\r\n\r\n                    var send_number_1 = that.send_number + value_initial.length;\r\n                    var send_number = Math.round(send_number_1);\r\n                    that.setData({\r\n                        send_number: send_number\r\n                    });\r\n                }\r\n            } else {\r\n                /* 当选择了以Hex十六进制发送的时候 */\r\n                var value = value_initial;\r\n                var write_function = that.write(value); //调用数据发送函数\r\n\r\n                /* 成功发送的值的字节 */\r\n\r\n                var send_number_1 = that.send_number + value_initial.length / 2;\r\n                var send_number = Math.floor(send_number_1);\r\n                that.setData({\r\n                    send_number: send_number\r\n                });\r\n            }\r\n        },\r\n\r\n        buf2hex: function (buffer) {\r\n            // buffer is an ArrayBuffer\r\n            return Array.prototype.map.call(new Uint8Array(buffer), (x) => ('00' + x.toString(16)).slice(-2)).join('');\r\n        },\r\n\r\n        base64_encode: function (str) {\r\n            var c1;\r\n            var c2;\r\n            var c3;\r\n            // 编码，配合encodeURIComponent使用\r\n            var base64EncodeChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n            var i = 0;\r\n            var len = str.length;\r\n            var strin = '';\r\n            while (i < len) {\r\n                c1 = str.charCodeAt(i++) & 255;\r\n\r\n                if (i == len) {\r\n                    strin += base64EncodeChars.charAt(c1 >> 2);\r\n                    strin += base64EncodeChars.charAt((c1 & 3) << 4);\r\n                    strin += '==';\r\n                    break;\r\n                }\r\n\r\n                c2 = str.charCodeAt(i++);\r\n\r\n                if (i == len) {\r\n                    strin += base64EncodeChars.charAt(c1 >> 2);\r\n                    strin += base64EncodeChars.charAt(((c1 & 3) << 4) | ((c2 & 240) >> 4));\r\n                    strin += base64EncodeChars.charAt((c2 & 15) << 2);\r\n                    strin += '=';\r\n                    break;\r\n                }\r\n\r\n                c3 = str.charCodeAt(i++);\r\n                strin += base64EncodeChars.charAt(c1 >> 2);\r\n                strin += base64EncodeChars.charAt(((c1 & 3) << 4) | ((c2 & 240) >> 4));\r\n                strin += base64EncodeChars.charAt(((c2 & 15) << 2) | ((c3 & 192) >> 6));\r\n                strin += base64EncodeChars.charAt(c3 & 63);\r\n            }\r\n\r\n            return strin;\r\n        }\r\n    }\r\n};\r\n</script>\r\n<style>\r\n.addincoins {\r\n    width: 100%;\r\n    background-color: #1eff00;\r\n}\r\n.payincoins {\r\n    margin-top: 5px;\r\n    width: 100%;\r\n    background-color: #1eff00;\r\n}\r\n.money {\r\n    width: 100%;\r\n}\r\n.item {\r\n    font-family: PingFangSC-Medium;\r\n    font-size: 26rpx;\r\n    line-height: 20rpx;\r\n}\r\n</style>\r\n","import mod from \"-!D:\\\\HBuilderX.1.9.4.20190426.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\mini-css-extract-plugin\\\\dist\\\\loader.js??ref--6-oneOf-1-0!D:\\\\HBuilderX.1.9.4.20190426.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\css-loader\\\\dist\\\\cjs.js??ref--6-oneOf-1-1!D:\\\\HBuilderX.1.9.4.20190426.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\loaders\\\\stylePostLoader.js!D:\\\\HBuilderX.1.9.4.20190426.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--6-oneOf-1-2!D:\\\\HBuilderX.1.9.4.20190426.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\postcss-loader\\\\src\\\\index.js??ref--6-oneOf-1-3!D:\\\\HBuilderX.1.9.4.20190426.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilderX.1.9.4.20190426.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./scancode.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!D:\\\\HBuilderX.1.9.4.20190426.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\mini-css-extract-plugin\\\\dist\\\\loader.js??ref--6-oneOf-1-0!D:\\\\HBuilderX.1.9.4.20190426.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\css-loader\\\\dist\\\\cjs.js??ref--6-oneOf-1-1!D:\\\\HBuilderX.1.9.4.20190426.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\loaders\\\\stylePostLoader.js!D:\\\\HBuilderX.1.9.4.20190426.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--6-oneOf-1-2!D:\\\\HBuilderX.1.9.4.20190426.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\postcss-loader\\\\src\\\\index.js??ref--6-oneOf-1-3!D:\\\\HBuilderX.1.9.4.20190426.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilderX.1.9.4.20190426.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./scancode.vue?vue&type=style&index=0&lang=css&\"","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1670291456826\n      var cssReload = require(\"D:/HBuilderX.1.9.4.20190426.full/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"hmr\":true,\"publicPath\":\"../../\",\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"sourceRoot":""}