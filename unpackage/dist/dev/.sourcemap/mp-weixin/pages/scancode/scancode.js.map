{"version":3,"sources":["uni-app:///main.js","webpack:///C:/Users/Acer/Desktop/hd/hduser-applet/pages/scancode/scancode.vue?f874","webpack:///C:/Users/Acer/Desktop/hd/hduser-applet/pages/scancode/scancode.vue?8651","webpack:///C:/Users/Acer/Desktop/hd/hduser-applet/pages/scancode/scancode.vue?d794","webpack:///C:/Users/Acer/Desktop/hd/hduser-applet/pages/scancode/scancode.vue?03c0","uni-app:///pages/scancode/scancode.vue","webpack:///C:/Users/Acer/Desktop/hd/hduser-applet/pages/scancode/scancode.vue?1d90","webpack:///C:/Users/Acer/Desktop/hd/hduser-applet/pages/scancode/scancode.vue?65aa"],"names":["wx","__webpack_require_UNI_MP_PLUGIN__","__webpack_require__","createPage","Page"],"mappings":";;;;;;;;;;kDAAA;;;AAGA;AACA,sG,8FAHA;AACAA,EAAE,CAACC,iCAAH,GAAuCC,mBAAvC,CAGAC,UAAU,CAACC,iBAAD,CAAV,C;;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqH;AACrH;AAC4D;AACL;AACa;;;AAGpE;AACqL;AACrL,gBAAgB,sLAAU;AAC1B,EAAE,8EAAM;AACR,EAAE,mFAAM;AACR,EAAE,4FAAe;AACjB;AACA;AACA;AACA;AACA;AACA,EAAE,uFAAU;AACZ;AACA;;AAEA;AACe,gF;;;;;;;;;;;;ACvBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAA+rB,CAAgB,+pBAAG,EAAC,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACoBntB,+D;;;;;;;;;;;;;;;;AAHA,mBAEA,6D,eAEA,EACA,IADA,kBACA,CACA,SACA,QACA,EACA,SADA,EAEA,WAFA,EADA,EAKA,EACA,SADA,EAEA,WAFA,EAGA,eAHA,EALA,EAUA,EACA,SADA,EAEA,WAFA,EAVA;;AAcA;AACA,iBADA;AAEA,mBAFA,EAdA;;AAkBA;AACA,iBADA;AAEA,mBAFA,EAlBA;;AAsBA;AACA,iBADA;AAEA,mBAFA,EAtBA,CADA;;;;AA6BA,iBA7BA;AA8BA,kBA9BA;AA+BA,qBA/BA;AAgCA,oBAhCA;AAiCA,mBAjCA;AAkCA,+BAlCA;AAmCA,2BAnCA;AAoCA,qBApCA;AAqCA,oBArCA;AAsCA,qBAtCA;;AAwCA;AACA;;OA3CA;AA8CA;AACA;AACA,+DAFA,CAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBADA;AAEA,sBAFA;;AAIA;;AAEA;AACA;AACA;AACA;AACA,iCADA;AAEA;AACA;AACA;AACA;AACA,mDAJA,CAIA;AACA,aAPA;;AASA;AACA;AACA,0BADA;AAEA,cAFA,CAEA;AACA;AACA,oCAFA,CAEA;;AAEA,4CAJA,CAIA;AACA,WAPA;AAQA,SAnBA,MAmBA;AACA;AACA;AACA,OAxBA;;AA0BA,GA/FA;AAgGA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCADA;AAEA;AACA;AACA,aAJA;;AAMA,SARA,MAQA;AACA;AACA;AACA;AACA,OAjBA;;AAmBA,GA1HA;AA2HA;;;AAGA,8BA9HA;AA+HA;;;AAGA,8BAlIA;AAmIA;;;AAGA,kCAtIA;AAuIA;;;AAGA,oDA1IA;AA2IA;;;AAGA,4CA9IA;AA+IA;;;AAGA,oDAlJA;AAmJA;AACA,eADA,uBACA,CADA,EACA;AACA;AACA,mCADA;AAEA;AACA,KALA;;AAOA;AACA;AACA;AACA,8DADA;AAEA;AACA,4BADA,EAFA;;AAKA;AACA,6DADA,CACA;AADA,SALA;AAQA,sBARA;AASA;AACA;AACA;;AAEA;AACA;AACA,yBADA;AAEA,8BAFA;AAGA,+BAHA;AAIA;AACA;AACA;AACA;AACA,eARA;;AAUA,WAXA,MAWA;AACA;AACA,+BADA;AAEA,sCAFA;;AAIA;AACA;AACA;AACA,+BADA;AAEA;AACA;AACA;AACA;AACA;AACA,+BADA;;AAGA;;AAEA;AACA,yCADA;AAEA;AACA,oDADA,CACA;AACA;;AAEA,sDAJA,CAIA;;AAEA;;AAEA;AACA,8DADA,CACA;;AAEA,gEAHA,CAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,8DADA,CACA;AADA,2BAFA,CAIA;AACA;AACA,qBAvBA,CAuBA;;AAEA,2CAzBA,CAyBA;AACA,mBA5BA;;AA8BA,eAzCA;AA0CA;AACA;AACA;;AAEA;AACA;AACA,2CADA;AAEA;AACA;AACA,qBAJA;;AAMA,iBAPA,MAOA;AACA;AACA,+BADA;AAEA,6CAFA;AAGA,qCAHA;AAIA;AACA;AACA;AACA,iDADA;;AAGA;AACA,qBAVA;;AAYA;AACA,eAnEA;;AAqEA;AACA,SArGA;AAsGA;AACA;AACA;AACA,wBADA;AAEA,gCA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ADA,CACA;AADA,aANA;AASA,0BATA;AAUA;AACA;AACA,aAZA;AAaA;AACA;AACA,4BADA;AAEA,oCAFA;;AAIA,aAlBA;;AAoBA,SAxBA;AAyBA;AACA;AACA,iCADA;AAEA;AACA;AACA,uCADA;AAEA,8CAFA;AAGA,2CAHA;;AAKA,aARA;;AAUA,SApCA;;AAsCA,KAlfA;;AAofA,WApfA,mBAofA,KApfA,EAofA;AACA,sBADA,CACA;;AAEA;AACA,kCADA;AAEA;AACA,gCAHA;AAIA,gCAJA;AAKA,uBALA;AAMA,8BANA;AAOA;AACA;AACA;AACA;AACA,yBADA;AAEA,2BAFA;AAGA,0BAHA;;AAKA,SAfA;AAgBA,qCAhBA;AAiBA,wCAjBA;;AAmBA,KA1gBA;;AA4gBA;AACA;AACA,yCADA;AAEA;AACA;AACA,iCADA;;AAGA;AACA,mCADA;;AAGA,SATA;;AAWA,KAxhBA;;AA0hBA,YA1hBA,sBA0hBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wDAdA,CAcA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,mDAFA,CAEA;;AAEA,kFAJA,CAIA;AACA;;AAEA;AACA;AACA,yEADA,CACA;AACA;;AAEA,wEAJA,CAIA;;AAEA,mDANA,CAMA;AACA,aAPA,MAOA;AACA;AACA;AACA,WAlBA,CAkBA;;AAEA;AACA;AACA,kCADA,CACA;;AAEA,yDAHA,CAGA;AACA,aAJA,EAIA,WAJA;AAKA,WANA;AAOA;;AAEA;AACA;AACA;AACA,oCADA;;AAGA,SAlCA,MAkCA;AACA;;AAEA;AACA,oDAJA,CAIA;AACA;;AAEA;AACA,iFADA,CACA;AACA;;AAEA,wCAXA,CAWA;AACA;;AAEA,mEAdA,CAcA;;AAEA;AACA;AACA,mDADA,CACA;;AAEA,sDAHA,CAGA;;AAEA,sCALA,CAKA;AACA,aANA,MAMA;AACA;AACA,4CAFA,CAEA;AACA;AACA,WA3BA,CA2BA;;AAEA;AACA;AACA,kCADA,CACA;;AAEA,yDAHA,CAGA;AACA,aAJA,EAIA,WAJA;AAKA,WANA;AAOA;;AAEA;AACA;AACA;AACA,oCADA;;AAGA;AACA,OAhFA,MAgFA;AACA;AACA;AACA,+CAHA,CAGA;;AAEA;;AAEA;AACA;AACA;AACA,kCADA;;AAGA;AACA,KA1oBA;;AA4oBA;AACA;AACA;AACA,KA/oBA;;AAipBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAtrBA,EAnJA,E;;;;;;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AAAs/B,CAAgB,s6BAAG,EAAC,C;;;;;;;;;;;ACA1gC;AACA,OAAO,KAAU,EAAE,kBAKd","file":"pages/scancode/scancode.js","sourcesContent":["import 'uni-pages';\n// @ts-ignore\nwx.__webpack_require_UNI_MP_PLUGIN__ = __webpack_require__;\nimport Vue from 'vue'\nimport Page from './pages/scancode/scancode.vue'\ncreatePage(Page)","import { render, staticRenderFns, recyclableRender, components } from \"./scancode.vue?vue&type=template&id=39943dc6&\"\nvar renderjs\nimport script from \"./scancode.vue?vue&type=script&lang=js&\"\nexport * from \"./scancode.vue?vue&type=script&lang=js&\"\nimport style0 from \"./scancode.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../Software/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"pages/scancode/scancode.vue\"\nexport default component.exports","export * from \"-!../../../../../../../Software/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../../Software/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--16-0!../../../../../../../Software/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!../../../../../../../Software/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../../../../../Software/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../Software/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./scancode.vue?vue&type=template&id=39943dc6&\"","var components\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!../../../../../../../Software/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../../../Software/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-1!../../../../../../../Software/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../../../Software/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../Software/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./scancode.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../../Software/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../../../Software/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-1!../../../../../../../Software/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../../../Software/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../Software/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./scancode.vue?vue&type=script&lang=js&\"","<template>\n    <view class=\"container\">\n        <text class=\"connect_device_name\">当前设备：{{ deviceName }}</text>\n        <radio-group class=\"radio-group\" @change=\"radioChange\">\n            <label class=\"radio\" v-for=\"(item, index) in items\" :key=\"index\">\n                <view>\n                    <radio :value=\"item.name\" :checked=\"item.checked\" />\n                    {{ item.value }}\n                </view>\n            </label>\n        </radio-group>\n        <button @tap=\"Sendincoins\" class=\"addincoins\">投币</button>\n        <button @tap=\"Payincoins\" class=\"payincoins\">支付</button>\n    </view>\n</template>\n\n<script>\nconst app = getApp();\n\nvar utils = require('../../utils/util');\nimport { authorization } from '@/api/home/index.js'\nexport default {\n    data() {\n        return {\n            items: [\n                {\n                    name: '1',\n                    value: '1元'\n                },\n                {\n                    name: '2',\n                    value: '2元',\n                    checked: 'true'\n                },\n                {\n                    name: '3',\n                    value: '3元'\n                },\n                {\n                    name: '4',\n                    value: '4元'\n                },\n                {\n                    name: '5',\n                    value: '5元'\n                },\n                {\n                    name: '6',\n                    value: '6元'\n                }\n            ],\n\n            subcode: '',\n            deviceId: '',\n            money_value: '',\n            deviceName: '',\n            serviceId: '',\n            notycharacteristicsId: '',\n            characteristicsId: '',\n            recv_number: '',\n            recv_value: '',\n            send_number: ''\n        };\n    }\n    /**\n     * 生命周期函数--监听页面加载\n     */,\n    onLoad: function (options) {\n        var that = this;\n        console.log('index 生命周期 onload' + JSON.stringify(options)); //在此函数中获取扫描普通链接二维码参数\n\n        let q = decodeURIComponent(options.q);\n\n        if (q) {\n            console.log('index 生命周期 onload url=' + q);\n            console.log('index 生命周期 onload 参数 flag=' + utils.getQueryString(q, 'flag'));\n        }\n\n        var checkQrcode = q.indexOf('https://www.tengfuchong.cn/applet');\n\n        if (checkQrcode != -1) {\n            var i = q.lastIndexOf('/');\n            var subq = q.substr(i + 1);\n            console.log('index' + i + '---截取字符串===' + subq);\n            this.setData({\n                subcode: subq,\n                deviceId: null\n            });\n        }\n\n        uni.login({\n            success: function (res) {\n                if (res.code) {\n                    uni.getUserInfo({\n                        withCredentials: true,\n                        success: function (res) {\n                            var objz = {};\n                            objz.avatarUrl = res.userInfo.avatarUrl;\n                            objz.nickName = res.userInfo.nickName;\n                            uni.setStorageSync('userInfo', objz); //存储userInfo\n                        }\n                    });\r\n\t\t\t\t\t// 获取用户openid\r\n\t\t\t\t\tauthorization({\r\n\t\t\t\t\t\tcode: res.code\r\n\t\t\t\t\t}).then(res => {\r\n\t\t\t\t\t\tvar obj = {};\r\n\t\t\t\t\t\tobj.openid = res.openid; // console.log(obj);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tuni.setStorageSync('user', obj); //存储openid\r\n\t\t\t\t\t})\n                } else {\n                    // console.log('获取用户登录态失败！' + res.errMsg)\n                }\n            }\n        });\n    },\n    /**\n     * 生命周期函数--监听页面初次渲染完成\n     */\n    onReady: function () {\n        var that = this;\n        /* 初始化蓝牙适配器 */\n\n        uni.openBluetoothAdapter({\n            success: function (res) {\n                var deviceMac = that.deviceId;\n                console.log('deviceid===' + deviceMac);\n\n                if (deviceMac != null) {\n                    console.log('通过有值');\n                    uni.closeBLEConnection({\n                        deviceId: that.deviceId,\n                        success: function (res) {\n                            that.WolfConnectDevice();\n                        }\n                    });\n                } else {\n                    console.log('不通过无值');\n                    that.WolfConnectDevice();\n                }\n            }\n        });\n    },\n    /**\n     * 生命周期函数--监听页面显示\n     */\n    onShow: function () {},\n    /**\n     * 生命周期函数--监听页面隐藏\n     */\n    onHide: function () {},\n    /**\n     * 生命周期函数--监听页面卸载\n     */\n    onUnload: function () {},\n    /**\n     * 页面相关事件处理函数--监听用户下拉动作\n     */\n    onPullDownRefresh: function () {},\n    /**\n     * 页面上拉触底事件的处理函数\n     */\n    onReachBottom: function () {},\n    /**\n     * 用户点击右上角分享\n     */\n    onShareAppMessage: function () {},\n    methods: {\n        radioChange(e) {\n            this.setData({\n                money_value: e.detail.value\n            }); // console.log('radio发生change事件，携带value值为：', e.detail.value)\n        },\n\n        WolfConnectDevice: function () {\n            var that = this;\n            uni.request({\n                url: 'https://app.tengfuchong.com/applet/findDeviceId',\n                data: {\n                    code: that.subcode\n                },\n                header: {\n                    'content-type': 'application/x-www-form-urlencoded' // 默认值\n                },\n                method: 'POST',\n                success: function (res) {\n                    let dataval = res.data;\n                    console.log('查询MAC地址===' + dataval);\n\n                    if (dataval == 0) {\n                        uni.showModal({\n                            title: '提示',\n                            content: '设备不存在',\n                            showCancel: false,\n                            success: function (res) {\n                                if (res.confirm) {\n                                    console.log('用户点击确定');\n                                }\n                            }\n                        });\n                    } else {\n                        that.setData({\n                            deviceId: dataval,\n                            deviceName: that.subcode\n                        });\n                        console.log('初始化蓝牙适配器成功');\n                        console.log('MAC===' + dataval);\n                        uni.createBLEConnection({\n                            deviceId: dataval,\n                            success: function (res) {\n                                // console.log('连接成功', res);\n                                console.log('连接deviceId', dataval);\n                                uni.hideLoading();\n                                uni.showToast({\n                                    title: '连接成功'\n                                });\n                                /* 获取设备的服务UUID */\n\n                                uni.getBLEDeviceServices({\n                                    deviceId: that.deviceId,\n                                    success: function (service) {\n                                        var all_UUID = service.services; //取出所有的服务\n                                        // console.log('所有的服务', all_UUID);\n\n                                        var UUID_lenght = all_UUID.length; //获取到服务数组的长度\n\n                                        /* 遍历服务数组 */\n\n                                        for (var index = 0; index < UUID_lenght; index++) {\n                                            var ergodic_UUID = all_UUID[index].uuid; //取出服务里面的UUID\n\n                                            var UUID_slice = ergodic_UUID.slice(4, 8); //截取4到8位\n\n                                            /* 判断是否是我们需要的FEE0 */\n                                            // console.log('uuid长度' + UUID_slice);\n                                            // console.log('uuid判别' + (UUID_slice == 'FEE0' || UUID_slice == 'ffe0'));\n\n                                            if (UUID_slice == 'FFE0' || UUID_slice == 'ffe0') {\n                                                var index_uuid = index;\n                                                that.setData({\n                                                    serviceId: all_UUID[index_uuid].uuid //确定需要的服务UUID\n                                                }); // console.log('uuid' + all_UUID[index_uuid].uuid)\n                                            }\n                                        } // console.log('连接deviceId', that.data.deviceId);\n\n                                        that.Characteristics(); //调用获取特征值函数\n                                    }\n                                });\n                            },\n                            fail: function (res) {\n                                console.log('res===' + res.errMsg);\n                                uni.hideLoading();\n\n                                if (res.errMsg.indexOf('already connect') != -1) {\n                                    uni.closeBLEConnection({\n                                        deviceId: that.deviceId,\n                                        success: function (res) {\n                                            that.WolfConnectDevice();\n                                        }\n                                    });\n                                } else {\n                                    uni.showModal({\n                                        title: '提示',\n                                        content: '连接失败，请确认设备是否在线',\n                                        showCancel: false,\n                                        success: function (res) {\n                                            if (res.confirm) {\n                                                uni.switchTab({\n                                                    url: '../device/device'\n                                                });\n                                            }\n                                        }\n                                    });\n                                }\n                            }\n                        });\n                    }\n                },\n                fail: function (err) {\n                    console.log(err.data);\n                    uni.showToast({\n                        icon: 'none',\n                        title: '服务器异常，清稍候再试'\n                    });\n                },\n                complete: function () {\n                    uni.hideLoading();\n                }\n            });\n        },\n\n        Characteristics: function () {\n            var that = this; // console.log('this===' + that);\n\n            var device_characteristics = [];\n            var characteristics_uuid = {};\n            uni.getBLEDeviceCharacteristics({\n                deviceId: that.deviceId,\n                serviceId: that.serviceId,\n                success: function (res) {\n                    var characteristics = res.characteristics; //获取到所有特征值\n\n                    var characteristics_length = characteristics.length; //获取到特征值数组的长度\n                    // console.log('获取到特征值', characteristics);\n                    // console.log('获取到特征值数组长度', characteristics_length);\n\n                    /* 遍历数组获取notycharacteristicsId */\n\n                    for (var index = 0; index < characteristics_length; index++) {\n                        var noty_characteristics_UUID = characteristics[index].uuid; //取出特征值里面的UUID\n\n                        var characteristics_slice = noty_characteristics_UUID.slice(4, 8); //截取4到8位\n\n                        /* 判断是否是我们需要的FEE1 */\n\n                        if (characteristics_slice == 'FFE1' || characteristics_slice == 'ffe1') {\n                            var index_uuid = index;\n                            that.setData({\n                                notycharacteristicsId: characteristics[index_uuid].uuid,\n                                //需确定要的使能UUID\n                                characteristicsId: characteristics[index_uuid].uuid //暂时确定的写入UUID\n                            });\n                            /* 遍历获取characteristicsId */\n\n                            for (var index = 0; index < characteristics_length; index++) {\n                                var characteristics_UUID = characteristics[index].uuid; //取出特征值里面的UUID\n\n                                var characteristics_slice = characteristics_UUID.slice(4, 8); //截取4到8位\n\n                                /* 判断是否是我们需要的FEE2 */\n\n                                if (characteristics_slice == 'FEE2' || characteristics_slice == 'fee2') {\n                                    var index_uuid = index;\n                                    that.setData({\n                                        characteristicsId: characteristics[index_uuid].uuid //确定的写入UUID\n                                    });\n                                }\n                            }\n                        }\n                    } // console.log('使能characteristicsId', that.data.notycharacteristicsId);\n\n                    // console.log('写入characteristicsId', that.data.characteristicsId);\n\n                    that.notycharacteristicsIdFun(); //使能事件\n                }\n            });\n        },\n\n        /* 使能函数 */\n        notycharacteristicsIdFun: function () {\n            var that = this;\n            var recv_value_ascii = '';\n            var string_value = '';\n            var recve_value = '';\n            uni.notifyBLECharacteristicValueChange({\n                deviceId: that.deviceId,\n                serviceId: that.serviceId,\n                characteristicId: that.notycharacteristicsId,\n                state: true,\n                success: function (res) {\n                    // console.log('使能成功', res);\n\n                    /* 设备返回值 */\n                    uni.onBLECharacteristicValueChange(function (res) {\n                        var length_hex = [];\n                        var turn_back = '';\n                        var turn_back_hex = '';\n                        var result = res.value;\n                        var hex = that.buf2hex(result); // console.log('返回的值', hex);\n                        // console.log('设备返回来的值', hex);\n\n                        var f_hex = hex;\n                        var length_soy = f_hex.length / 2;\n                        var length = Math.round(length_soy);\n\n                        for (var i = 0; i < length; i++) {\n                            var hex_spalit = f_hex.slice(0, 2);\n                            length_hex.push(hex_spalit);\n                            f_hex = f_hex.substring(2);\n                        } // console.log('length_hex', length_hex);\n\n                        for (var j = 0; j < length_hex.length; j++) {\n                            var integar = length_hex[j]; //十六进制\n\n                            recve_value = parseInt(integar, 16); //十进制\n                            // console.log('recve_value', recve_value);\n\n                            turn_back = turn_back + String.fromCharCode(recve_value);\n                            turn_back_hex = turn_back_hex + integar; // console.log('turn_back', integar);\n                        } // console.log('返回值hex' + turn_back_hex);\n\n                        if (turn_back_hex == '5504830100d2') {\n                            uni.hideLoading();\n                            uni.showToast({\n                                title: '投币成功'\n                            });\n                        } // console.log('最终转回来的值', turn_back);\n\n                        var recv_number_1 = that.recv_number + turn_back.length;\n                        var recv_number = Math.round(recv_number_1);\n                        that.setData({\n                            recv_number: recv_number,\n                            recv_value: that.recv_value + turn_back\n                        });\n                    });\n                },\n                fail: function (res) {\n                    // console.log('使能失败', res);\n                }\n            });\n        },\n\n        Sendincoins: function () {\n            var that = this;\n            uni.openBluetoothAdapter({\n                success: function (res) {\n                    var send1 = 'aa';\n                    var send2 = '83';\n                    var send3 = '04';\n                    var send4 = '01';\n                    var send5 = '01';\n                    var send6 = that.money_value || '02';\n                    var valSize = send6.length;\n\n                    if (valSize < 2 && valSize > 0) {\n                        send6 = '0' + send6;\n                    }\n\n                    var send7 = send2 ^ send3 ^ send4 ^ send5 ^ send6; // console.log(\"拼凑值===\" + send1 + '' + send2 + '' + send3 + '' + send4 + '' + send5 + '' + send6 + '' + send7)\n                    // var value_initial = 'aa830401010186';\n\n                    var value_initial = send1 + '' + send2 + '' + send3 + '' + send4 + '' + send5 + '' + send6 + '' + send7;\n                    /* 判断字节是否超过20字节 */\n\n                    if (value_initial.length > 20) {\n                        //当字节超过20的时候，采用分段发送\n                        if (that.send_string == true) {\n                            //选择16进制发送时\n                            var value_initial_exceed = value_initial; //将输入框的值取过来，方便循环\n\n                            var value_initial_average = Math.ceil(value_initial_exceed.length / 20); //将value_initial_exceed的长度除以20，余数再向上取一，确定循环几次\n                            // console.log('需要循环的次数', value_initial_average);\n\n                            for (var i = 0; i < value_initial_average; i++) {\n                                if (value_initial_exceed.length > 20) {\n                                    var value_initial_send = value_initial_exceed.slice(0, 20); //截取前20个字节\n                                    // console.log('截取到的值', value_initial_send);\n\n                                    value_initial_exceed = value_initial_exceed.substring(20); //value_initial_exceed替换为取掉前20字节后的数据\n\n                                    write_array.push(value_initial_send); //将所有截取的值放在一个数组\n                                } else {\n                                    write_array.push(value_initial_exceed);\n                                }\n                            } // console.log('write_array数组', write_array);\n\n                            write_array.map(function (val, index) {\n                                setTimeout(function () {\n                                    var value_set = val; // console.log('value_set', value_set);\n\n                                    var write_function = that.write(value_set); //调用数据发送函数\n                                }, index * 100);\n                            });\n                            /* 发送的值的字节 */\n\n                            var send_number_1 = that.send_number + value_initial.length / 2;\n                            var send_number = Math.floor(send_number_1);\n                            that.setData({\n                                send_number: send_number\n                            });\n                        } else {\n                            //选择Ascii码发送\n\n                            /* 当选择以Ascii字符发送的时候 */\n                            var value_split = value_initial.split(''); //将字符一个一个分开\n                            // console.log('value_split', value_split);\n\n                            for (var i = 0; i < value_split.length; i++) {\n                                value_ascii = value_ascii + value_split[i].charCodeAt().toString(16); //转为Ascii字符后连接起\n                            }\n\n                            var Ascii_value = value_ascii; // console.log('转为Ascii码值', Ascii_value);\n                            // console.log('Ascii_value的长度', Ascii_value.length)\n\n                            var Ascii_send_time = Math.ceil(Ascii_value.length / 20); // console.log('Ascii发送的次数', Ascii_send_time);\n\n                            for (var i = 0; i < Ascii_send_time; i++) {\n                                if (Ascii_value.length > 20) {\n                                    var value = Ascii_value.slice(0, 20); // console.log('截取到的值', value);\n\n                                    Ascii_value = Ascii_value.substring(20); // console.log('此时剩下的Ascii_value', Ascii_value);\n\n                                    write_array.push(value); //放在数组里面\n                                } else {\n                                    var value = Ascii_value;\n                                    write_array.push(Ascii_value); //放在数组里面\n                                }\n                            } // console.log('数组write_array', write_array);\n\n                            write_array.map(function (val, index) {\n                                setTimeout(function () {\n                                    var value_set = val; // console.log('value_set', value_set);\n\n                                    var write_function = that.write(value_set); //调用数据发送函数\n                                }, index * 100);\n                            });\n                            /* 发送的值的字节 */\n\n                            var send_number_1 = that.send_number + value_initial.length;\n                            var send_number = Math.round(send_number_1);\n                            that.setData({\n                                send_number: send_number\n                            });\n                        }\n                    } else {\n                        /* 当选择了以Hex十六进制发送的时候 */\n                        var value = value_initial;\n                        var write_function = that.write(value); //调用数据发送函数\n\n                        /* 成功发送的值的字节 */\n\n                        var send_number_1 = that.send_number + value_initial.length / 2;\n                        var send_number = Math.floor(send_number_1);\n                        that.setData({\n                            send_number: send_number\n                        });\n                    }\n                },\n                fail: function (res) {\n                    uni.showModal({\n                        content: '请开启手机蓝牙后再试',\n                        success: function () {\n                            uni.switchTab({\n                                url: '../device/device',\n                                success: function () {\n                                    // console.log(\"success\");\n                                },\n                                fail: function (res) {\n                                    // console.log(\"fail\" + res);\n                                }\n                            });\n                        }\n                    });\n                }\n            });\n        },\n\n        write: function (str) {\n            var that = this;\n            var value = str; // console.log('value', value);\n\n            var valSize = value.length;\n\n            if (valSize < 2 && valSize > 0) {\n                value = '0' + value;\n            }\n            /* 将数值转为ArrayBuffer类型数据 */\n\n            var typedArray = new Uint8Array(\n                (value + '\\r\\n').match(/[\\da-f]{2}/gi).map(function (h) {\n                    return parseInt(h, 16);\n                })\n            );\n            var buffer = typedArray.buffer;\n            uni.writeBLECharacteristicValue({\n                deviceId: that.deviceId,\n                serviceId: that.serviceId,\n                characteristicId: that.characteristicsId,\n                value: buffer,\n                success: function (res) {\n                    console.log('数据发送成功', res);\n                },\n                fail: function (res) {\n                    // console.log('调用失败', res);\n\n                    /* 调用失败时，再次调用 */\n                    uni.writeBLECharacteristicValue({\n                        deviceId: that.deviceId,\n                        serviceId: that.serviceId,\n                        characteristicId: that.characteristicsId,\n                        value: buffer,\n                        success: function (res) {\n                            // console.log('第2次数据发送成功', res);\n                        },\n                        fail: function (res) {\n                            console.log('第2次调用失败', res);\n                            /* 调用失败时，再次调用 */\n\n                            uni.writeBLECharacteristicValue({\n                                deviceId: that.deviceId,\n                                serviceId: that.serviceId,\n                                characteristicId: that.characteristicsId,\n                                value: buffer,\n                                success: function (res) {\n                                    // console.log('第3次数据发送成功', res);\n                                },\n                                fail: function (res) {\n                                    // wx.showToast({\n                                    //   title: '设备不在线或距离较远',\n                                    //   success: function() {\n                                    //     wx.switchTab({\n                                    //       url: '../device/device',\n                                    //     });\n                                    //   }\n                                    // })\n                                    uni.showModal({\n                                        title: '提示',\n                                        content: '设备不在线或距离较远',\n                                        showCancel: false,\n                                        success: function (res) {\n                                            if (res.confirm) {\n                                                uni.switchTab({\n                                                    url: '../device/device'\n                                                });\n                                            }\n                                        }\n                                    });\n                                }\n                            });\n                        }\n                    });\n                }\n            });\n        },\n\n        Payincoins: function () {\n            var that = this;\n            uni.openBluetoothAdapter({\n                success: function (res) {\n                    var openid = '';\n                    var user = uni.getStorageSync('user') || {};\n                    uni.request({\n                        url: 'https://app.tengfuchong.com/testpay/pay',\n                        data: {\n                            openId: user.openid,\n                            money: that.money_value || 2\n                        },\n                        header: {\n                            'content-type': 'application/x-www-form-urlencoded' // 默认值\n                        },\n                        method: 'POST',\n                        success: function (res) {\n                            that.doWxPay(res.data);\n                        },\n                        fail: function (err) {\n                            uni.showToast({\n                                icon: 'none',\n                                title: '服务器异常，清稍候再试'\n                            });\n                        }\n                    });\n                },\n                fail: function () {\n                    uni.showModal({\n                        content: '请开启手机蓝牙后再试',\n                        success: function () {\n                            uni.switchTab({\n                                url: '../device/device',\n                                success: function () {},\n                                fail: function (res) {}\n                            });\n                        }\n                    });\n                }\n            });\n        },\n\n        doWxPay(param) {\n            var that = this; //小程序发起微信支付\n\n            uni.requestPayment({\n                timeStamp: param.timeStamp,\n                //记住，这边的timeStamp一定要是字符串类型的，不然会报错\n                nonceStr: param.nonceStr,\n                package: param.packagess,\n                signType: 'MD5',\n                paySign: param.paySign,\n                success: function (event) {\n                    // success\n                    that.senddata();\n                    uni.showToast({\n                        title: '支付成功',\n                        icon: 'success',\n                        duration: 2000\n                    });\n                },\n                fail: function (error) {},\n                complete: function () {}\n            });\n        },\n\n        checkBluetoothIfOpen: function () {\n            uni.openBluetoothAdapter({\n                success: function (res) {},\n                fail: function (res) {\n                    uni.showModal({\n                        content: '请开启手机蓝牙后再试'\n                    });\n                    uni.navigateTo({\n                        url: '../device/device'\n                    });\n                }\n            });\n        },\n\n        senddata() {\n            var that = this;\n            var send1 = 'aa';\n            var send2 = '83';\n            var send3 = '04';\n            var send4 = '01';\n            var send5 = '01';\n            var send6 = that.money_value || '02';\n            var valSize = send6.length;\n\n            if (valSize < 2 && valSize > 0) {\n                send6 = '0' + send6;\n            }\n\n            var send7 = send2 ^ send3 ^ send4 ^ send5 ^ send6; // var value_initial = 'aa830401010186';\n\n            var value_initial = send1 + '' + send2 + '' + send3 + '' + send4 + '' + send5 + '' + send6 + '' + send7;\n            /* 判断字节是否超过20字节 */\n\n            if (value_initial.length > 20) {\n                //当字节超过20的时候，采用分段发送\n                if (that.send_string == true) {\n                    //选择16进制发送时\n                    var value_initial_exceed = value_initial; //将输入框的值取过来，方便循环\n\n                    var value_initial_average = Math.ceil(value_initial_exceed.length / 20); //将value_initial_exceed的长度除以20，余数再向上取一，确定循环几次\n                    // console.log('需要循环的次数', value_initial_average);\n\n                    for (var i = 0; i < value_initial_average; i++) {\n                        if (value_initial_exceed.length > 20) {\n                            var value_initial_send = value_initial_exceed.slice(0, 20); //截取前20个字节\n                            // console.log('截取到的值', value_initial_send);\n\n                            value_initial_exceed = value_initial_exceed.substring(20); //value_initial_exceed替换为取掉前20字节后的数据\n\n                            write_array.push(value_initial_send); //将所有截取的值放在一个数组\n                        } else {\n                            write_array.push(value_initial_exceed);\n                        }\n                    } // console.log('write_array数组', write_array);\n\n                    write_array.map(function (val, index) {\n                        setTimeout(function () {\n                            var value_set = val; // console.log('value_set', value_set);\n\n                            var write_function = that.write(value_set); //调用数据发送函数\n                        }, index * 100);\n                    });\n                    /* 发送的值的字节 */\n\n                    var send_number_1 = that.send_number + value_initial.length / 2;\n                    var send_number = Math.floor(send_number_1);\n                    that.setData({\n                        send_number: send_number\n                    });\n                } else {\n                    //选择Ascii码发送\n\n                    /* 当选择以Ascii字符发送的时候 */\n                    var value_split = value_initial.split(''); //将字符一个一个分开\n                    // console.log('value_split', value_split);\n\n                    for (var i = 0; i < value_split.length; i++) {\n                        value_ascii = value_ascii + value_split[i].charCodeAt().toString(16); //转为Ascii字符后连接起\n                    }\n\n                    var Ascii_value = value_ascii; // console.log('转为Ascii码值', Ascii_value);\n                    // console.log('Ascii_value的长度', Ascii_value.length)\n\n                    var Ascii_send_time = Math.ceil(Ascii_value.length / 20); // console.log('Ascii发送的次数', Ascii_send_time);\n\n                    for (var i = 0; i < Ascii_send_time; i++) {\n                        if (Ascii_value.length > 20) {\n                            var value = Ascii_value.slice(0, 20); // console.log('截取到的值', value);\n\n                            Ascii_value = Ascii_value.substring(20); // console.log('此时剩下的Ascii_value', Ascii_value);\n\n                            write_array.push(value); //放在数组里面\n                        } else {\n                            var value = Ascii_value;\n                            write_array.push(Ascii_value); //放在数组里面\n                        }\n                    } // console.log('数组write_array', write_array);\n\n                    write_array.map(function (val, index) {\n                        setTimeout(function () {\n                            var value_set = val; // console.log('value_set', value_set);\n\n                            var write_function = that.write(value_set); //调用数据发送函数\n                        }, index * 100);\n                    });\n                    /* 发送的值的字节 */\n\n                    var send_number_1 = that.send_number + value_initial.length;\n                    var send_number = Math.round(send_number_1);\n                    that.setData({\n                        send_number: send_number\n                    });\n                }\n            } else {\n                /* 当选择了以Hex十六进制发送的时候 */\n                var value = value_initial;\n                var write_function = that.write(value); //调用数据发送函数\n\n                /* 成功发送的值的字节 */\n\n                var send_number_1 = that.send_number + value_initial.length / 2;\n                var send_number = Math.floor(send_number_1);\n                that.setData({\n                    send_number: send_number\n                });\n            }\n        },\n\n        buf2hex: function (buffer) {\n            // buffer is an ArrayBuffer\n            return Array.prototype.map.call(new Uint8Array(buffer), (x) => ('00' + x.toString(16)).slice(-2)).join('');\n        },\n\n        base64_encode: function (str) {\n            var c1;\n            var c2;\n            var c3;\n            // 编码，配合encodeURIComponent使用\n            var base64EncodeChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n            var i = 0;\n            var len = str.length;\n            var strin = '';\n            while (i < len) {\n                c1 = str.charCodeAt(i++) & 255;\n\n                if (i == len) {\n                    strin += base64EncodeChars.charAt(c1 >> 2);\n                    strin += base64EncodeChars.charAt((c1 & 3) << 4);\n                    strin += '==';\n                    break;\n                }\n\n                c2 = str.charCodeAt(i++);\n\n                if (i == len) {\n                    strin += base64EncodeChars.charAt(c1 >> 2);\n                    strin += base64EncodeChars.charAt(((c1 & 3) << 4) | ((c2 & 240) >> 4));\n                    strin += base64EncodeChars.charAt((c2 & 15) << 2);\n                    strin += '=';\n                    break;\n                }\n\n                c3 = str.charCodeAt(i++);\n                strin += base64EncodeChars.charAt(c1 >> 2);\n                strin += base64EncodeChars.charAt(((c1 & 3) << 4) | ((c2 & 240) >> 4));\n                strin += base64EncodeChars.charAt(((c2 & 15) << 2) | ((c3 & 192) >> 6));\n                strin += base64EncodeChars.charAt(c3 & 63);\n            }\n\n            return strin;\n        }\n    }\n};\n</script>\n<style>\n.addincoins {\n    width: 100%;\n    background-color: #1eff00;\n}\n.payincoins {\n    margin-top: 5px;\n    width: 100%;\n    background-color: #1eff00;\n}\n.money {\n    width: 100%;\n}\n.item {\n    font-family: PingFangSC-Medium;\n    font-size: 26rpx;\n    line-height: 20rpx;\n}\n</style>\n","import mod from \"-!../../../../../../../Software/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../../../Software/HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../../../Software/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../../Software/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--6-oneOf-1-2!../../../../../../../Software/HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../../../../../../Software/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../Software/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./scancode.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../../../../../Software/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../../../Software/HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../../../Software/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../../Software/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--6-oneOf-1-2!../../../../../../../Software/HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../../../../../../Software/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../Software/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./scancode.vue?vue&type=style&index=0&lang=css&\"","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1669713823452\n      var cssReload = require(\"C:/Software/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"hmr\":true,\"publicPath\":\"../../\",\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"sourceRoot":""}